{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace_location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the Log Analytics Workspace"
            }
        },
        "workspace_resource_group": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().name]",
            "metadata": {
                "description": "Resouce Group of the Log Analytics Workspace"
            }
        },
        "workspace-name": {
            "defaultValue": "",
            "type": "string",
            "metadata": {
                "description": "Workspace name for Log Analytics where Microsoft Sentinel is setup"
            }
        },
        "workspace_id": {
            "type": "string",
            "metadata": {
                "description": "Workspace ID for Log Analytics where Microsoft Sentinel is setup"
            }
        }
    },
    "variables": {
        "api-azuremonitor-id": "azuremonitor-automated-response",
        "api-azuresentinel-id": "azuresentinel-automated-response",
        "api-azureloganalyticsdatacollector-id": "azureloganalyticsdatacollector-automated-response",
        "api-office365-id": "office365-automated-response",
        "api-teams-id": "teams-automated-response",
        "api-azureautomation-id": "azureautomation-automated-response"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-azureautomation-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/azureautomation')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-teams-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/teams')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-office365-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-azureloganalyticsdatacollector-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/azureloganalyticsdatacollector')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-azuremonitor-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/azuremonitorlogs')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-azuresentinel-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Base-Module",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Microsoft_Sentinel_incident": {
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "callback_url": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "path": "/incident-creation"
                            }
                        }
                    },
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "runAfter": {
                                "For_each_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['object']?['id']",
                                    "message": "<p><span style=\"font-size: 18px\"><strong>Risk Scoring</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 16px\">Final Score: </span><span style=\"font-size: 16px\">@{variables('RiskScore')}</span><span style=\"font-size: 16px\">&nbsp;</span></p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            }
                        },
                        "Compose": {
                            "runAfter": {
                                "Filter_array_-_Other": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_Domain": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_File": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_FileHash": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_URL": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_account": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_host": [
                                    "Succeeded",
                                    "Failed"
                                ],
                                "For_each_ip": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Compose",
                            "inputs": {
                                "Accounts": "@variables('AccountsArray')",
                                "AccountsCount": "@length(variables('AccountsArray'))",
                                "Domains": "@variables('DomainArray')",
                                "DomainsCount": "@length(variables('DomainArray'))",
                                "EntitiesCount": "@add(add(add(length(variables('AccountsArray')), length(variables('DomainArray'))), add(length(variables('FileArray')), length(variables('FileHashArray')))), add(add(length(variables('HostArray')), length(variables('IPArray'))), length(variables('URLArray'))))",
                                "FileHashes": "@variables('FileHashArray')",
                                "FileHashesCount": "@length(variables('FileHashArray'))",
                                "Files": "@variables('FileArray')",
                                "FilesCount": "@length(variables('FileArray'))",
                                "Hosts": "@variables('HostArray')",
                                "HostsCount": "@length(variables('HostArray'))",
                                "IPs": "@variables('IPArray')",
                                "IPsCount": "@length(variables('IPArray'))",
                                "IncidentARMId": "@triggerBody()?['object']?['id']",
                                "ModuleName": "@{parameters('PlaybookInternalName')}",
                                "OtherEntities": "@body('Filter_array_-_Other')",
                                "OtherEntitiesCount": "@length(body('Filter_array_-_Other'))",
                                "TenantDisplayName": "@{body('HTTP_-_Get_Tenant')?['value']?[0]?['displayName']}",
                                "TenantId": "@{body('HTTP_-_Get_Tenant')?['value']?[0]?['id']}",
                                "URLs": "@variables('URLArray')",
                                "URLsCount": "@length(variables('URLArray'))"
                            }
                        },
                        "Condition_-_Account_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_-_User_Enrichment": {
                                    "runAfter": {
                                        "Append_to_string_variable": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p><span style=\"font-size: 14px\"><strong>Account Enrichment </strong></span>@{variables('AccountComment')}@{if(not(equals(outputs('Compose')?['ModuleVersions'], null)), if(equals(parameters('PlaybookVersion'),outputs('Compose')?['ModuleVersions']?[parameters('PlaybookInternalName')]), '', concat('<br>Sentinel Triage AssistanT - Update Available: Installed Version: ', parameters('PlaybookVersion'), ', Available Version: ', outputs('Compose')?['ModuleVersions']?[parameters('PlaybookInternalName')])) , '')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Append_to_string_variable": {
                                    "runAfter": {
                                        "For_each": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "AccountComment",
                                        "value": "</table>"
                                    }
                                },
                                "Create_HTML_table_-_Accounts": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "UserPrincipalName",
                                                "value": "@coalesce(item()?['userPrincipalName'], concat(item()?['RawEntity']?['friendlyName'], ' (Unresolved Entity)'))"
                                            },
                                            {
                                                "header": "City",
                                                "value": "@coalesce(item()?['City'], item()?['RawEntity']?['additionalData']?['City'], 'Unknown')"
                                            },
                                            {
                                                "header": "Country",
                                                "value": "@coalesce(item()?['Country'], item()?['RawEntity']?['additionalData']?['Country'], 'Unknown')"
                                            },
                                            {
                                                "header": "Department",
                                                "value": "@coalesce(item()?['RawEntity']?['additionalData']?['Department'], 'Unknown')"
                                            },
                                            {
                                                "header": "JobTitle",
                                                "value": "@coalesce(item()?['RawEntity']?['additionalData']?['JobTitle'], 'Unknown')"
                                            },
                                            {
                                                "header": "ManagerUPN",
                                                "value": "@coalesce(item()?['RawEntity']?['additionalData']?['ManagerName'], 'Unknown')"
                                            },
                                            {
                                                "header": "MfaRegistered",
                                                "value": "@coalesce(item()?['isMfaRegistered'], 'Unknown')"
                                            },
                                            {
                                                "header": "SSPREnabled",
                                                "value": "@coalesce(item()?['isSSPREnabled'], 'Unknown')"
                                            },
                                            {
                                                "header": "SSPRRegistered",
                                                "value": "@coalesce(item()?['isSSPRRegistered'], 'Unknown')"
                                            },
                                            {
                                                "header": "IsVIP",
                                                "value": "@item()?['isVIP']"
                                            }
                                        ],
                                        "format": "HTML",
                                        "from": "@variables('AccountsArray')"
                                    }
                                },
                                "For_each": {
                                    "foreach": "@variables('AccountsArray')",
                                    "actions": {
                                        "Append_account_details": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "AccountComment",
                                                "value": "<tr><td>@{coalesce(item()?['userPrincipalName'], concat(item()?['RawEntity']?['friendlyName'], ' (Unresolved Entity)'))}</td><td>@{coalesce(item()?['City'], item()?['RawEntity']?['additionalData']?['City'], 'Unknown')}</td><td>@{coalesce(item()?['Country'], item()?['RawEntity']?['additionalData']?['Country'], 'Unknown')}</td><td>@{coalesce(item()?['RawEntity']?['additionalData']?['Department'], item()?['Department'], 'Unknown')}</td><td>@{coalesce(item()?['RawEntity']?['additionalData']?['JobTitle'], item()?['JobTitle'], 'Unknown')}</td><td>@{coalesce(item()?['RawEntity']?['additionalData']?['ManagerName'], item()?['managerUpn'], 'Unknown')}</td><td>@{coalesce(item()?['isMfaRegistered'], 'Unknown')}</td>"
                                            }
                                        },
                                        "Condition_-_if_account_enabled": {
                                            "actions": {
                                                "Append_to_string_variable_12": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "AccountComment",
                                                        "value": "<td>✅ True</td>"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Append_account_details": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Append_to_string_variable_13": {
                                                        "runAfter": {},
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "AccountComment",
                                                            "value": "<td>⛔False</td>"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@item()?['Enabled']",
                                                            true
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_if_VIP_2": {
                                            "actions": {
                                                "Append_to_string_variable_2": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "AccountComment",
                                                        "value": "<td>@{items('For_each')?['isVIP']} <strong style=\"color:red\">+5 risk points</strong></td></tr>"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Condition_-_if_account_enabled": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Append_to_string_variable_3": {
                                                        "runAfter": {},
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "AccountComment",
                                                            "value": "<td>@{items('For_each')?['isVIP']}</td></tr>"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each')?['isVIP']",
                                                            "True"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Create_HTML_table_-_Accounts": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('AccountsArray'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_Host_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "runAfter": {
                                        "Append_to_string_variable_8": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p><span style=\"font-size: 14px\"><strong>Host Enrichment </strong></span><span style=\"font-size: 14px\"><strong>@{variables('Host Comment')}</strong></span><span style=\"font-size: 14px\"><strong></strong></span></p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Append_to_string_variable_8": {
                                    "runAfter": {
                                        "For_each_3": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "Host Comment",
                                        "value": "</table>"
                                    }
                                },
                                "For_each_3": {
                                    "foreach": "@variables('HostArray')",
                                    "actions": {
                                        "Append_to_string_variable_7": {
                                            "runAfter": {},
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "Host Comment",
                                                "value": "<tr><td>@{items('For_each_3')?['CortexInfo'][0]['endpoint_name']}</td><td>@{items('For_each_3')?['CortexInfo'][0]['operating_system']}</td><td>@{items('For_each_3')?['CortexInfo'][0]['ip']}</td><td>@{items('For_each_3')?['CortexInfo'][0]['public_ip']}</td><td>@{items('For_each_3')?['CortexInfo'][0]['operational_status']}</td><td>@{items('For_each_3')?['CortexInfo'][0]['content_status']}</td></tr>"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('HostArray'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_-_IP_Comment": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_-_IP_Enrichment": {
                                    "runAfter": {
                                        "Append_to_string_variable_6": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p><span style=\"font-size: 14px\"><strong>IP Address Enrichment </strong></span>@{variables('IP Comment')}</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Append_to_string_variable_6": {
                                    "runAfter": {
                                        "For_each_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToStringVariable",
                                    "inputs": {
                                        "name": "IP Comment",
                                        "value": "</table>"
                                    }
                                },
                                "Create_HTML_table_-_IP_Comment": {
                                    "runAfter": {},
                                    "type": "Table",
                                    "inputs": {
                                        "columns": [
                                            {
                                                "header": "IP",
                                                "value": "@item()?['enrichmentResults'][0]['query']"
                                            },
                                            {
                                                "header": "City",
                                                "value": "@item()?['enrichmentResults'][0]['city']"
                                            },
                                            {
                                                "header": "State",
                                                "value": "@item()?['enrichmentResults'][0]['regionName']"
                                            },
                                            {
                                                "header": "Country",
                                                "value": "@item()?['enrichmentResults'][0]['country']"
                                            },
                                            {
                                                "header": "ISP",
                                                "value": "@item()?['enrichmentResults'][0]['isp']"
                                            },
                                            {
                                                "header": "ASN",
                                                "value": "@item()?['enrichmentResults'][0]['as']"
                                            },
                                            {
                                                "header": "Mobile",
                                                "value": "@item()?['enrichmentResults'][0]['mobile']"
                                            },
                                            {
                                                "header": "Proxy/Hosting",
                                                "value": "@{item()?['enrichmentResults'][0]['proxy']}/@{item()?['enrichmentResults'][0]['hosting']}"
                                            },
                                            {
                                                "header": "AbuseIPDBScore",
                                                "value": "@item()?['enrichmentResults'][1]['abuseConfidenceScore']"
                                            }
                                        ],
                                        "format": "HTML",
                                        "from": "@variables('IPComment')"
                                    }
                                },
                                "For_each_2": {
                                    "foreach": "@variables('IPComment')",
                                    "actions": {
                                        "Append_to_string_variable_11": {
                                            "runAfter": {
                                                "Condition_-_check_abuseIPDB_score": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToStringVariable",
                                            "inputs": {
                                                "name": "IP Comment",
                                                "value": "</tr>"
                                            }
                                        },
                                        "Condition_-_check_abuseIPDB_score": {
                                            "actions": {
                                                "Append_to_string_variable_9": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "IP Comment",
                                                        "value": "<td>@{items('For_each_2')?['enrichmentResults'][1]['abuseConfidenceScore']}<strong style=\"color:red\">+5 risk points</strong></td>"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Condition_-_check_if_risky_ip": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Append_to_string_variable_10": {
                                                        "runAfter": {},
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "IP Comment",
                                                            "value": "<td>@{items('For_each_2')?['enrichmentResults'][1]['abuseConfidenceScore']}</td>"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "greaterOrEquals": [
                                                            "@items('For_each_2')?['enrichmentResults'][1]['abuseConfidenceScore']",
                                                            25
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "Condition_-_check_if_risky_ip": {
                                            "actions": {
                                                "Append_to_string_variable_4": {
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable",
                                                    "inputs": {
                                                        "name": "IP Comment",
                                                        "value": "<tr><td>@{items('For_each_2')?['enrichmentResults'][0]['query']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['city']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['regionName']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['country']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['isp']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['as']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['mobile']}</td><td>Proxy: @{items('For_each_2')?['enrichmentResults'][0]['proxy']}\\nHosting: @{items('For_each_2')?['enrichmentResults'][0]['hosting']}\\n<strong style=\"color:red\">+5 risk points</strong></td>"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "Append_to_string_variable_5": {
                                                        "runAfter": {},
                                                        "type": "AppendToStringVariable",
                                                        "inputs": {
                                                            "name": "IP Comment",
                                                            "value": "<tr><td>@{items('For_each_2')?['enrichmentResults'][0]['query']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['city']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['regionName']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['country']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['isp']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['as']}</td><td>@{items('For_each_2')?['enrichmentResults'][0]['mobile']}</td><td>Proxy: @{items('For_each_2')?['enrichmentResults'][0]['proxy']}\\nHosting: @{items('For_each_2')?['enrichmentResults'][0]['hosting']}</td>"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each_2')?['enrichmentResults'][0]['proxy']",
                                                            true
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@items('For_each_2')?['enrichmentResults'][0]['hosting']",
                                                            true
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Create_HTML_table_-_IP_Comment": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                }
                            },
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greater": [
                                            "@length(variables('IPComment'))",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_Entity_Check": {
                            "actions": {
                                "Add_comment_to_incident_-_No_Entities": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['object']?['id']",
                                            "message": "<p>Playbook-Director failed to analyze this incident. This error was due to no incident entities being available at the time the incident was processed.</p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    }
                                },
                                "Response_-_No_Entities_Found": {
                                    "runAfter": {
                                        "Add_comment_to_incident_-_No_Entities": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response",
                                    "kind": "Http",
                                    "inputs": {
                                        "body": {
                                            "Error": "@{parameters('PlaybookInternalName')} failed to execute with status no entities found",
                                            "PlaybookName": "@{workflow()?['name']}",
                                            "PlaybookResourceId": "@{workflow()?['id']}",
                                            "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                            "PlaybookVersion": "@parameters('PlaybookVersion')"
                                        },
                                        "statusCode": 404
                                    }
                                },
                                "Terminate": {
                                    "runAfter": {
                                        "Response_-_No_Entities_Found": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Terminate",
                                    "inputs": {
                                        "runError": {
                                            "code": "404",
                                            "message": "No entities present in incident trigger"
                                        },
                                        "runStatus": "Failed"
                                    }
                                }
                            },
                            "runAfter": {},
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@length(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                            0
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Filter_array_-_Accounts": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'account')"
                            }
                        },
                        "Filter_array_-_Domains": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'dnsresolution')"
                            }
                        },
                        "Filter_array_-_File_Hashes": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'filehash')"
                            }
                        },
                        "Filter_array_-_Files": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'file')"
                            }
                        },
                        "Filter_array_-_Hosts": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'host')"
                            }
                        },
                        "Filter_array_-_IPs": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'ip')"
                            }
                        },
                        "Filter_array_-_Other": {
                            "runAfter": {
                                "HTTP_-_Get_Tenant": [
                                    "Succeeded",
                                    "Failed"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@and(not(equals(toLower(item()['kind']), 'url')),not(equals(toLower(item()['kind']), 'ip')),not(equals(toLower(item()['kind']), 'host')),not(equals(toLower(item()['kind']), 'file')),not(equals(toLower(item()['kind']), 'filehash')),not(equals(toLower(item()['kind']), 'dnsresolution')),not(equals(toLower(item()['kind']), 'account')))"
                            }
                        },
                        "Filter_array_-_URLs": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Query",
                            "inputs": {
                                "from": "@array(triggerBody()?['object']?['properties']?['relatedEntities'])",
                                "where": "@equals(toLower(item()['kind']), 'url')"
                            }
                        },
                        "For_each_4": {
                            "foreach": "@triggerBody()?['object']?['properties']?['Alerts']",
                            "actions": {
                                "Switch_2": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case": {
                                            "case": "Azure Active Directory Identity Protection",
                                            "actions": {}
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@items('For_each_4')?['properties']?['providerAlertId']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Condition_-_Account_Comment": [
                                    "Succeeded"
                                ],
                                "Condition_-_Host_Comment": [
                                    "Succeeded"
                                ],
                                "Condition_-_IP_Comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_Domain": {
                            "foreach": "@body('Filter_array_-_Domains')",
                            "actions": {
                                "Append_to_DomainArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "DomainArray",
                                        "value": {
                                            "RawEntity": "@item()['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_DomainArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_File": {
                            "foreach": "@body('Filter_array_-_Files')",
                            "actions": {
                                "Append_to_FileArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "FileArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_File')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_FileArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_FileHash": {
                            "foreach": "@body('Filter_array_-_File_Hashes')",
                            "actions": {
                                "Append_to_FileHashArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "FileHashArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_FileHash')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_FileHashArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_URL": {
                            "foreach": "@body('Filter_array_-_URLs')",
                            "actions": {
                                "Append_to_URLArray": {
                                    "runAfter": {},
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "URLArray",
                                        "value": {
                                            "RawEntity": "@items('For_each_URL')['properties']"
                                        }
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_URLArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_account": {
                            "foreach": "@body('Select_Accounts')",
                            "actions": {
                                "Append_to_AccountArray": {
                                    "runAfter": {
                                        "Compose_User": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "AccountsArray",
                                        "value": "@outputs('Compose_User')"
                                    }
                                },
                                "Append_to_AccountArray_Unenriched": {
                                    "runAfter": {
                                        "Compose_User_Unenriched": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "AccountsArray",
                                        "value": "@outputs('Compose_User_Unenriched')"
                                    }
                                },
                                "Check_if_VIP": {
                                    "runAfter": {
                                        "Compose_UPN": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": "let vips = _GetWatchlist('vip_users');\nvips\n| where SearchKey contains \"@{outputs('Compose_UPN')}\"",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "[parameters('workspace_resource_group')]",
                                            "resourcename": "LogAnalyticsAndSentinel",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "[parameters('workspace_id')]",
                                            "timerange": "Last 24 hours"
                                        }
                                    }
                                },
                                "Compose_UPN": {
                                    "runAfter": {
                                        "Compose_UserId": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@coalesce(body('HTTP_-_Email')?['value']?[0]?['userPrincipalName'],body('HTTP_-_UPN')?['userPrincipalName'],body('HTTP_-_AADId')?['userPrincipalName'],body('HTTP_-_ObjectSid')?['value']?[0]?['userPrincipalName'],body('HTTP_-_SamAccountName')?['value']?[0]?['userPrincipalName'],body('HTTP_-_DistinguishedName')?['value']?[0]?['userPrincipalName'])"
                                },
                                "Compose_User": {
                                    "runAfter": {
                                        "HTTP_-_Security_Info": [
                                            "Succeeded",
                                            "Failed"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@addProperty(addProperty(addProperty(addProperty(addProperty(addProperty(addProperty(coalesce(body('HTTP_-_Email')?['value']?[0],body('HTTP_-_UPN'),body('HTTP_-_AADId'),body('HTTP_-_ObjectSid')?['value']?[0],body('HTTP_-_SamAccountName')?['value']?[0],body('HTTP_-_DistinguishedName')?['value']?[0]), 'AssignedRoles', body('Select_Roles')), 'RawEntity', item()['RawEntity']), 'isAADPrivileged', if(greater(length(body('Select_Roles')), 0), true, false)), 'isMfaRegistered', body('HTTP_-_Security_Info')?['value']?[0]?['isMfaRegistered']), 'isSSPREnabled', body('HTTP_-_Security_Info')?['value']?[0]?['isEnabled']), 'isSSPRRegistered', body('HTTP_-_Security_Info')?['value']?[0]?['isRegistered']), 'isVIP', variables('VIP'))"
                                },
                                "Compose_UserId": {
                                    "runAfter": {
                                        "Switch": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": "@coalesce(body('HTTP_-_Email')?['value']?[0]?['id'],body('HTTP_-_UPN')?['id'],body('HTTP_-_AADId')?['id'],body('HTTP_-_ObjectSid')?['value']?[0]?['id'],body('HTTP_-_SamAccountName')?['value']?[0]?['id'],body('HTTP_-_DistinguishedName')?['value']?[0]?['id'])"
                                },
                                "Compose_User_Unenriched": {
                                    "runAfter": {
                                        "HTTP_-_Roles": [
                                            "Failed"
                                        ]
                                    },
                                    "type": "Compose",
                                    "inputs": {
                                        "City": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['city'],body('HTTP_-_UPN')?['city'],body('HTTP_-_AADId')?['city'],body('HTTP_-_ObjectSid')?['value']?[0]?['city'],body('HTTP_-_SamAccountName')?['value']?[0]?['city'],body('HTTP_-_DistinguishedName')?['value']?[0]?['city'], 'Unknown')}",
                                        "Country": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['country'],body('HTTP_-_UPN')?['country'],body('HTTP_-_AADid')?['country'],body('HTTP_-_ObjectSid')?['value']?[0]?['country'],body('HTTP_-_SamAccountName')?['value']?[0]?['country'],body('HTTP_-_DistinguishedName')?['value']?[0]?['country'], 'Unknown')}",
                                        "Department": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['department'],body('HTTP_-_UPN')?['department'],body('HTTP_-_AADid')?['department'],body('HTTP_-_ObjectSid')?['value']?[0]?['department'],body('HTTP_-_SamAccountName')?['value']?[0]?['department'],body('HTTP_-_DistinguishedName')?['value']?[0]?['department'], 'Unknown')}",
                                        "Enabled": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['accountEnabled'],body('HTTP_-_UPN')?['accountEnabled'],body('HTTP_-_AADid')?['accountEnabled'],body('HTTP_-_ObjectSid')?['value']?[0]?['accountEnabled'],body('HTTP_-_SamAccountName')?['value']?[0]?['accountEnabled'],body('HTTP_-_DistinguishedName')?['value']?[0]?['accountEnabled'], 'Unknown')}",
                                        "JobTitle": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['jobTitle'],body('HTTP_-_UPN')?['jobTitle'],body('HTTP_-_AADid')?['jobTitle'],body('HTTP_-_ObjectSid')?['value']?[0]?['jobTitle'],body('HTTP_-_SamAccountName')?['value']?[0]?['jobTitle'],body('HTTP_-_DistinguishedName')?['value']?[0]?['jobTitle'], 'Unknown')}",
                                        "RawEntity": "@items('For_each_account')['RawEntity']",
                                        "isVIP": "@{variables('VIP')}",
                                        "managerUpn": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['manager']?['userPrincipalName'],body('HTTP_-_UPN')?['manager']?['userPrincipalName'],body('HTTP_-_AADid')?['manager']?['userPrincipalName'],body('HTTP_-_ObjectSid')?['value']?[0]?['manager']?['userPrincipalName'],body('HTTP_-_SamAccountName')?['value']?[0]?['manager']?['userPrincipalName'],body('HTTP_-_DistinguishedName')?['value']?[0]?['manager']?['userPrincipalName'], 'Unknown')}",
                                        "userPrincipalName": "@{coalesce(body('HTTP_-_Email')?['value']?[0]?['userPrincipalName'],body('HTTP_-_UPN')?['userPrincipalName'],body('HTTP_-_AADId')?['userPrincipalName'],body('HTTP_-_ObjectSid')?['value']?[0]?['userPrincipalName'],body('HTTP_-_SamAccountName')?['value']?[0]?['userPrincipalName'],body('HTTP_-_DistinguishedName')?['value']?[0]?['userPrincipalName'], 'Unknown')}"
                                    }
                                },
                                "Condition_-_if_VIP": {
                                    "actions": {
                                        "Set_variable": {
                                            "runAfter": {},
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "VIP",
                                                "value": true
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Check_if_VIP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "greater": [
                                                    "@length(body('Check_if_VIP')?['value'])",
                                                    0
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                },
                                "HTTP_-_Roles": {
                                    "runAfter": {
                                        "Condition_-_if_VIP": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "authority": "https://login.microsoft.com",
                                            "clientId": "",
                                            "secret": "",
                                            "tenant": "",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/v1.0/roleManagement/directory/roleAssignments?$filter=principalId%20eq%20'@{outputs('Compose_UserId')}'&$expand=roleDefinition"
                                    }
                                },
                                "HTTP_-_Security_Info": {
                                    "runAfter": {
                                        "Select_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Http",
                                    "inputs": {
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "authority": "https://login.microsoft.com",
                                            "clientId": "",
                                            "secret": "",
                                            "tenant": "",
                                            "type": "ActiveDirectoryOAuth"
                                        },
                                        "headers": {
                                            "Content-Type": "application/json"
                                        },
                                        "method": "GET",
                                        "uri": "https://graph.microsoft.com/beta/reports/credentialUserRegistrationDetails?$filter=userPrincipalName%20eq%20'@{outputs('Compose_UPN')}'"
                                    }
                                },
                                "Reset_VIP_variable": {
                                    "runAfter": {
                                        "Append_to_AccountArray": [
                                            "Succeeded",
                                            "Skipped",
                                            "Failed"
                                        ],
                                        "Append_to_AccountArray_Unenriched": [
                                            "Succeeded",
                                            "Skipped",
                                            "Failed"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "VIP",
                                        "value": false
                                    }
                                },
                                "Select_Roles": {
                                    "runAfter": {
                                        "HTTP_-_Roles": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Select",
                                    "inputs": {
                                        "from": "@body('HTTP_-_Roles')['value']",
                                        "select": {
                                            "Role": "@item()['roleDefinition']['displayName']"
                                        }
                                    }
                                },
                                "Switch": {
                                    "runAfter": {},
                                    "cases": {
                                        "Case_-_AADId": {
                                            "case": "AADId",
                                            "actions": {
                                                "HTTP_-_AADId": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{items('For_each_account')['aadUserId']}?$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_DistinguishedName": {
                                            "case": "DistinguishedName",
                                            "actions": {
                                                "HTTP_-_DistinguishedName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=(onPremisesDistinguishedName%20eq%20'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_ObjectSid": {
                                            "case": "ObjectSid",
                                            "actions": {
                                                "HTTP_-_ObjectSid": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(onPremisesSecurityIdentifier%20eq%20'@{items('For_each_account')['sid']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_SamAccountName": {
                                            "case": "SamAccountName",
                                            "actions": {
                                                "Filter_array": {
                                                    "runAfter": {
                                                        "HTTP_-_SamAccountName": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Query",
                                                    "inputs": {
                                                        "from": "@body('HTTP_-_SamAccountName')['value']",
                                                        "where": "@and(equals(item()['onPremisesSamAccountName'], items('For_each_account')['accountName']),equals(toUpper(split(item()['onPremisesDomainName'], '.')[0]), items('For_each_account')['ntDomain']))"
                                                    }
                                                },
                                                "HTTP_-_SamAccountName": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/beta/users?$filter=mailNickname%20eq%20'@{items('For_each_account')['accountName']}'%20or%20startswith(onPremisesUserPrincipalName,'@{items('For_each_account')['accountName']}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        },
                                        "Case_-_UPN": {
                                            "case": "UPN",
                                            "actions": {
                                                "HTTP_-_Email": {
                                                    "runAfter": {
                                                        "HTTP_-_UPN": [
                                                            "Failed"
                                                        ]
                                                    },
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users?$filter=(mail%20eq%20'@{concat(item()['accountName'], '@', item()['upnSuffix'])}')&$select=@{variables('SelectProperties')}"
                                                    }
                                                },
                                                "HTTP_-_UPN": {
                                                    "runAfter": {},
                                                    "type": "Http",
                                                    "inputs": {
                                                        "authentication": {
                                                            "audience": "https://graph.microsoft.com",
                                                            "authority": "https://login.microsoft.com",
                                                            "clientId": "",
                                                            "secret": "",
                                                            "tenant": "",
                                                            "type": "ActiveDirectoryOAuth"
                                                        },
                                                        "method": "GET",
                                                        "uri": "https://graph.microsoft.com/v1.0/users/@{concat(item()['accountName'], '@', item()['upnSuffix'])}?$select=@{variables('SelectProperties')}"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "default": {
                                        "actions": {}
                                    },
                                    "expression": "@item()['accountType']",
                                    "type": "Switch"
                                }
                            },
                            "runAfter": {
                                "Initialize_VIP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_host": {
                            "foreach": "@body('Filter_array_-_Hosts')",
                            "actions": {
                                "Append_to_array_variable": {
                                    "runAfter": {
                                        "Module-HostEnrichment": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "AppendToArrayVariable",
                                    "inputs": {
                                        "name": "HostArray",
                                        "value": {
                                            "CortexInfo": "@body('Module-HostEnrichment')",
                                            "DnsDomain": "@{items('For_each_host')?['properties']?['dnsDomain']}",
                                            "FQDN": "@{concat(item()['properties']?['hostName'], '.', item()['properties']?['dnsDomain'])}",
                                            "Hostname": "@{items('For_each_host')?['properties']?['hostName']}",
                                            "RawEntity": "@items('For_each_host')?['properties']"
                                        }
                                    }
                                },
                                "Module-HostEnrichment": {
                                    "runAfter": {},
                                    "type": "Http",
                                    "inputs": {
                                        "body": {
                                            "hostname": "@{split(items('For_each_host')['properties']['hostName'], '.')[0]}"
                                        },
                                        "method": "POST",
                                        "uri": ""
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_HostArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_ip": {
                            "foreach": "@body('Filter_array_-_IPs')",
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_to_IPArray_-_Geo_Failure": {
                                            "runAfter": {
                                                "HTTP_-_Module-EnrichIPAddress": [
                                                    "TimedOut",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPArray",
                                                "value": {
                                                    "Address": "@{items('For_each_ip')['properties']['address']}",
                                                    "GeoData": {},
                                                    "RawEntity": "@items('For_each_ip')['properties']"
                                                }
                                            }
                                        },
                                        "Append_to_IPArray_With_GeoData": {
                                            "runAfter": {
                                                "HTTP_-_Module-EnrichIPAddress": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPArray",
                                                "value": {
                                                    "Address": "@{items('For_each_ip')['properties']['address']}",
                                                    "GeoData": "@body('HTTP_-_Module-EnrichIPAddress')",
                                                    "RawEntity": "@items('For_each_ip')['properties']"
                                                }
                                            }
                                        },
                                        "Append_to_IPComment": {
                                            "runAfter": {
                                                "Append_to_IPArray_With_GeoData": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "IPComment",
                                                "value": {
                                                    "enrichmentResults": "@body('HTTP_-_Module-EnrichIPAddress')"
                                                }
                                            }
                                        },
                                        "HTTP_-_Module-EnrichIPAddress": {
                                            "runAfter": {},
                                            "type": "Http",
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['object']?['id']}",
                                                    "ipAddress": [
                                                        "@{items('For_each_ip')?['properties']['address']}"
                                                    ]
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            }
                                        },
                                        "Increment_variable": {
                                            "runAfter": {
                                                "Append_to_IPComment": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "IncrementVariable",
                                            "inputs": {
                                                "name": "RiskScore",
                                                "value": "@body('HTTP_-_Module-EnrichIPAddress')?[2]['riskPoints']"
                                            }
                                        }
                                    },
                                    "runAfter": {},
                                    "else": {
                                        "actions": {
                                            "Append_to_IPArray_Without_GeoData": {
                                                "runAfter": {},
                                                "type": "AppendToArrayVariable",
                                                "inputs": {
                                                    "name": "IPArray",
                                                    "value": {
                                                        "Address": "@{items('For_each_ip')['properties']['address']}",
                                                        "GeoData": {},
                                                        "RawEntity": "@items('For_each_ip')['properties']"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    true,
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "runAfter": {
                                "Initialize_IPComment_Array": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_secret": {
                            "runAfter": {
                                "Condition_Entity_Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "kv-connection"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('spsecret')}/value"
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "HTTP_-_Get_Tenant": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/organization"
                            }
                        },
                        "HTTP_-_Test_API_Access": {
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/users?$top=1&$select=id"
                            }
                        },
                        "Initialize_AccountsArray": {
                            "runAfter": {
                                "Select_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccountsArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_DomainArray": {
                            "runAfter": {
                                "Filter_array_-_Domains": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "DomainArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_FileArray": {
                            "runAfter": {
                                "Filter_array_-_Files": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_FileHashArray": {
                            "runAfter": {
                                "Filter_array_-_File_Hashes": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "FileHashArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_HostArray": {
                            "runAfter": {
                                "Filter_array_-_Hosts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "HostArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_IPArray": {
                            "runAfter": {
                                "Filter_array_-_IPs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_IPComment_Array": {
                            "runAfter": {
                                "Initialize_IPArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IPComment",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_Select_Properties": {
                            "runAfter": {
                                "Initialize_AccountsArray": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "SelectProperties",
                                        "type": "string",
                                        "value": "userPrincipalName,id,onPremisesSecurityIdentifier,onPremisesDistinguishedName,onPremisesDomainName,onPremisesSamAccountName,onPremisesSyncEnabled,mail,city,state,country,department,jobTitle,officeLocation,accountEnabled&$expand=manager($select=userPrincipalName,mail,id)"
                                    }
                                ]
                            }
                        },
                        "Initialize_URLArray": {
                            "runAfter": {
                                "Filter_array_-_URLs": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "URLArray",
                                        "type": "array",
                                        "value": []
                                    }
                                ]
                            }
                        },
                        "Initialize_VIP": {
                            "runAfter": {
                                "Initialize_Select_Properties": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VIP",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            }
                        },
                        "Initialize_variable": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AccountComment",
                                        "type": "string",
                                        "value": "<table><table><tr><th>UPN</th><th>City</th><th>Country</th><th>Department</th><th>JobTitle</th><th>ManagerUPN</th><th>MFARegistered</th><th>Enabled</th><th>IsVIP</th></tr>"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_2": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "IP Comment",
                                        "type": "string",
                                        "value": "<table><tr><th>IP</th><th>City</th><th>State</th><th>Country</th><th>ISP</th><th>ASN</th><th>Mobile</th><th>Risky</th><th>AbuseIPDB Score</th></tr>"
                                    }
                                ]
                            }
                        },
                        "Initialize_variable_3": {
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "Host Comment",
                                        "type": "string",
                                        "value": "<table><tr><td>Hostname</td><td>OS</td><td>Internal IPs</td><td>Public IP</td><td>XDR Operational Status</td><td>XDR Content Status</td></tr>"
                                    }
                                ]
                            }
                        },
                        "Response": {
                            "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": "@outputs('Compose')",
                                "statusCode": 200
                            }
                        },
                        "Response_-_API_Failure": {
                            "runAfter": {
                                "RiskScore": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "body": {
                                    "Error": "@{parameters('PlaybookInternalName')} failed to execute with status @{outputs('HTTP_-_Test_API_Access')['statusCode']}",
                                    "PlaybookName": "@{workflow()?['name']}",
                                    "PlaybookResourceId": "@{workflow()?['id']}",
                                    "PlaybookRunId": "@{workflow()?['run']?['name']}",
                                    "PlaybookVersion": "@parameters('PlaybookVersion')",
                                    "SourceError": "@body('HTTP_-_Test_API_Access')"
                                },
                                "statusCode": "@outputs('HTTP_-_Test_API_Access')['statusCode']"
                            }
                        },
                        "RiskScore": {
                            "runAfter": {
                                "HTTP_-_Test_API_Access": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "RiskScore",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            }
                        },
                        "Select_Accounts": {
                            "runAfter": {
                                "Filter_array_-_Accounts": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Select",
                            "inputs": {
                                "from": "@body('Filter_array_-_Accounts')",
                                "select": {
                                    "RawEntity": "@item()['properties']",
                                    "aadUserId": "@item()['properties']?['aadUserId']",
                                    "accountName": "@item()['properties']?['accountName']",
                                    "accountType": "@if(not(empty(item()['properties']?['aadUserId'])), 'AADId', if(not(empty(item()['properties']?['upnSuffix'])), 'UPN', if(not(empty(item()['properties']?['sid'])), 'ObjectSid', if(not(empty(item()['properties']?['ntDomain'])), 'SamAccountName', if(contains(item()['properties']?['accountName'], ',DC='), 'DistinguishedName', 'Unknown')))))",
                                    "ntDomain": "@item()['properties']?['ntDomain']",
                                    "sid": "@item()['properties']?['sid']",
                                    "upnSuffix": "@item()['properties']?['upnSuffix']"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuremonitor-id'))]",
                                "connectionName": "azuremonitorlogs",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-EnrichIPAddress",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Append_to_array_variable_3": {
                            "inputs": {
                                "name": "response",
                                "value": "@addProperty(variables('riskPointsObject'), 'riskPoints', variables('risk points'))"
                            },
                            "runAfter": {
                                "Initialize_variable_-_riskPointsObject": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToArrayVariable"
                        },
                        "Close_abuseipdb_table": {
                            "inputs": {
                                "name": "abuseipdb comment",
                                "value": "</table>"
                            },
                            "runAfter": {
                                "Close_ipapi_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Close_ipapi_table": {
                            "inputs": {
                                "name": "ipapi comment",
                                "value": "</table>"
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "For_each": {
                            "actions": {
                                "Condition_-_if_RFC1918": {
                                    "actions": {},
                                    "else": {
                                        "actions": {
                                            "Append_abuseipdb_results_to_comment": {
                                                "inputs": {
                                                    "name": "abuseipdb comment",
                                                    "value": "<tr><td>@{body('Parse_JSON')?['data']?['ipAddress']}</td><td>@{body('Parse_JSON')?['data']?['abuseConfidenceScore']}</td><td>@{body('Parse_JSON')?['data']?['lastReportedAt']}</td></tr>"
                                                },
                                                "runAfter": {
                                                    "Parse_JSON": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToStringVariable"
                                            },
                                            "Append_ipapi_results_to_comment": {
                                                "inputs": {
                                                    "name": "ipapi comment",
                                                    "value": "<tr><td>@{items('For_each')}</td><td>@{body('HTTP_-_ipapi_lookup')?['org']}</td><td>@{body('HTTP_-_ipapi_lookup')?['city']}</td><td>@{body('HTTP_-_ipapi_lookup')['regionName']}</td><td>@{body('HTTP_-_ipapi_lookup')?['country']}</td><td>Proxy: @{body('HTTP_-_ipapi_lookup')?['proxy']} Hosting: @{body('HTTP_-_ipapi_lookup')?['hosting']}</td><td>@{body('HTTP_-_ipapi_lookup')?['mobile']}</td></tr>"
                                                },
                                                "runAfter": {
                                                    "Append_to_array_variable": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToStringVariable"
                                            },
                                            "Append_to_array_variable": {
                                                "inputs": {
                                                    "name": "response",
                                                    "value": "@addProperty(body('HTTP_-_ipapi_lookup'), 'type', 'ipapi')"
                                                },
                                                "runAfter": {
                                                    "HTTP_-_ipapi_lookup": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToArrayVariable"
                                            },
                                            "Append_to_array_variable_2": {
                                                "inputs": {
                                                    "name": "response",
                                                    "value": "@addProperty(body('HTTP_abuseipdb_check')?['data'], 'type', 'abuseipdb')"
                                                },
                                                "runAfter": {
                                                    "Append_abuseipdb_results_to_comment": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "AppendToArrayVariable"
                                            },
                                            "Condition_-_high_abuse_confidence": {
                                                "actions": {
                                                    "Increment_variable_2": {
                                                        "inputs": {
                                                            "name": "risk points",
                                                            "value": 5
                                                        },
                                                        "runAfter": {},
                                                        "type": "IncrementVariable"
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "greater": [
                                                                "@body('HTTP_abuseipdb_check')?['data']?['abuseConfidenceScore']",
                                                                25
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Condition_-_ip_is_proxy": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "Condition_-_ip_is_proxy": {
                                                "actions": {
                                                    "Increment_variable": {
                                                        "inputs": {
                                                            "name": "risk points",
                                                            "value": 5
                                                        },
                                                        "runAfter": {},
                                                        "type": "IncrementVariable"
                                                    }
                                                },
                                                "expression": {
                                                    "or": [
                                                        {
                                                            "equals": [
                                                                "@body('HTTP_-_ipapi_lookup')?['proxy']",
                                                                true
                                                            ]
                                                        },
                                                        {
                                                            "equals": [
                                                                "@body('HTTP_-_ipapi_lookup')?['hosting']",
                                                                true
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Send_Data": [
                                                        "Succeeded",
                                                        "Failed",
                                                        "Skipped",
                                                        "TimedOut"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "HTTP_-_ipapi_lookup": {
                                                "inputs": {
                                                    "method": "GET",
                                                    "uri": "http://ip-api.com/json/@{items('For_each')}?fields=status,message,country,countryCode,region,regionName,city,zip,lat,lon,timezone,isp,org,as,mobile,proxy,hosting,query"
                                                },
                                                "runAfter": {},
                                                "type": "Http"
                                            },
                                            "HTTP_abuseipdb_check": {
                                                "inputs": {
                                                    "headers": {
                                                        "Key": ""
                                                    },
                                                    "method": "GET",
                                                    "queries": {
                                                        "ipAddress": "@{items('For_each')}"
                                                    },
                                                    "uri": "https://api.abuseipdb.com/api/v2/check"
                                                },
                                                "runAfter": {
                                                    "Append_ipapi_results_to_comment": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "Http"
                                            },
                                            "Parse_JSON": {
                                                "inputs": {
                                                    "content": "@body('HTTP_abuseipdb_check')",
                                                    "schema": {
                                                        "properties": {
                                                            "data": {
                                                                "properties": {
                                                                    "abuseConfidenceScore": {
                                                                        "type": [
                                                                            "integer",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "countryCode": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "countryName": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "domain": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "hostnames": {
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "ipAddress": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "ipVersion": {
                                                                        "type": [
                                                                            "integer",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isPublic": {
                                                                        "type": [
                                                                            "boolean",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isTor": {
                                                                        "type": [
                                                                            "boolean",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isWhitelisted": {
                                                                        "type": [
                                                                            "boolean",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "isp": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "lastReportedAt": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "numDistinctUsers": {
                                                                        "type": [
                                                                            "integer",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "reports": {
                                                                        "items": {
                                                                            "properties": {
                                                                                "categories": {
                                                                                    "items": {
                                                                                        "type": [
                                                                                            "integer",
                                                                                            "null"
                                                                                        ]
                                                                                    },
                                                                                    "type": [
                                                                                        "array",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "comment": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "reportedAt": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "reporterCountryCode": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "reporterCountryName": {
                                                                                    "type": [
                                                                                        "string",
                                                                                        "null"
                                                                                    ]
                                                                                },
                                                                                "reporterId": {
                                                                                    "type": [
                                                                                        "integer",
                                                                                        "null"
                                                                                    ]
                                                                                }
                                                                            },
                                                                            "required": [],
                                                                            "type": [
                                                                                "object",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "totalReports": {
                                                                        "type": [
                                                                            "integer",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "usageType": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    }
                                                                },
                                                                "type": [
                                                                    "object",
                                                                    "null"
                                                                ]
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "runAfter": {
                                                    "HTTP_abuseipdb_check": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson"
                                            },
                                            "Send_Data": {
                                                "inputs": {
                                                    "body": "{\n\"ipAddress\":@{items('For_each')}\",\n\"asn\":\"@{body('HTTP_-_ipapi_lookup')?['org']}\",\n\"city\":\"@{body('HTTP_-_ipapi_lookup')?['city']}\",\n\"state\":\"@{body('HTTP_-_ipapi_lookup')['regionName']}\",\n\"country\":\"@{body('HTTP_-_ipapi_lookup')?['country']}\",\n\"isProxy\":\" @{body('HTTP_-_ipapi_lookup')?['proxy']}\",\n\"isHosting\":\" @{body('HTTP_-_ipapi_lookup')?['hosting']}\",\n\"isMobile\":\"@{body('HTTP_-_ipapi_lookup')?['mobile']}\",\n\"abuseConfidenceScore\":\"@{body('Parse_JSON')?['data']?['abuseConfidenceScore']}\",\n\"totalReports\":\"@{body('Parse_JSON')?['data']?['totalReports']}\",\n\"lastReported\":\"@{body('Parse_JSON')?['data']?['lastReportedAt']}\"\n}",
                                                    "headers": {
                                                        "Log-Type": "IpEntityEnrichment"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azureloganalyticsdatacollector_1']['connectionId']"
                                                        }
                                                    },
                                                    "method": "post",
                                                    "path": "/api/logs"
                                                },
                                                "runAfter": {
                                                    "Append_to_array_variable_2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ApiConnection"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@body('RFC1918_check')?['value'][0]['isPrivate']",
                                                    true
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "RFC1918_check": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                },
                                "RFC1918_check": {
                                    "inputs": {
                                        "body": "print \"@{items('For_each')}\"\n| extend isPrivate = ipv4_is_private(print_0)",
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/queryData",
                                        "queries": {
                                            "resourcegroups": "[parameters('workspace_resource_group')]",
                                            "resourcename": "LogAnalyticsAndSentinel",
                                            "resourcetype": "Log Analytics Workspace",
                                            "subscriptions": "[subscription().subscriptionId]",
                                            "timerange": "Last 24 hours"
                                        }
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                }
                            },
                            "foreach": "@triggerBody()?['ipAddress']",
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "enrichment data object",
                                        "type": "object"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_abuseipdb_comment": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "abuseipdb comment",
                                        "type": "string",
                                        "value": "<table><tr><th>IP</th><th>Abuse Confidence Score (0-100)</th><th>Last Reported</th></tr>"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_ipapi_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_ipapi_comment": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ipapi comment",
                                        "type": "string",
                                        "value": "<table><tr><th>IP</th><th>ISP</th><th>City</th><th>State</th><th>Country</th><th>Risky?</th><th>Mobile Provider</th></tr>"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_response": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "response",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_risk_points": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_riskPointsObject": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "riskPointsObject",
                                        "type": "object",
                                        "value": {
                                            "type": "riskPoints"
                                        }
                                    }
                                ]
                            },
                            "runAfter": {
                                "Close_abuseipdb_table": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_risk_points": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "risk points",
                                        "type": "integer",
                                        "value": 0
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_abuseipdb_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Response": {
                            "inputs": {
                                "body": "@variables('response')",
                                "statusCode": 200
                            },
                            "kind": "Http",
                            "runAfter": {
                                "Append_to_array_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Response"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "ipAddress": {
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureloganalyticsdatacollector": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azureloganalyticsdatacollector-id'))]",
                                "connectionName": "azureloganalyticsdatacollector",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuremonitor-id'))]",
                                "connectionName": "azuremonitorlogs",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-EnrichAccounts",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']",
                                    "message": "<p><span style=\"font-size: 16px\"><strong>Account Entity Enrichment<br>\n</strong></span><span style=\"font-size: 12px\">(note: list may include unrelated accounts if UPN is not provided)</span>@{variables('account info comment')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Condition_if_VIP_user_involved": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Close_account_info_comment": {
                            "inputs": {
                                "name": "account info comment",
                                "value": "</table>"
                            },
                            "runAfter": {
                                "For_each_account_entity": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Condition_if_VIP_user_involved": {
                            "actions": {
                                "Update_incident": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['incidentArmId']",
                                            "severity": "High"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel_1']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('VIP user')",
                                            true
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Close_account_info_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "For_each_account_entity": {
                            "actions": {
                                "Condition_if_not_UPN": {
                                    "actions": {
                                        "Condition_3": {
                                            "actions": {
                                                "Append_to_string_variable_5": {
                                                    "inputs": {
                                                        "name": "account info comment",
                                                        "value": "<tr><td>@{substring(items('For_each_account_entity'),1,sub(length(items('For_each_account_entity')),1))} is not a valid Entra ID user.</td><td></td><td></td><td></td></tr>"
                                                    },
                                                    "runAfter": {},
                                                    "type": "AppendToStringVariable"
                                                }
                                            },
                                            "else": {
                                                "actions": {
                                                    "For_each": {
                                                        "actions": {
                                                            "Append_to_array_variable": {
                                                                "inputs": {
                                                                    "name": "account guids",
                                                                    "value": "@items('For_each')?['id']"
                                                                },
                                                                "runAfter": {},
                                                                "type": "AppendToArrayVariable"
                                                            },
                                                            "Condition": {
                                                                "actions": {
                                                                    "Append_to_string_variable": {
                                                                        "inputs": {
                                                                            "name": "account info comment",
                                                                            "value": "<tr><td>@{items('For_each')?['userPrincipalName']}</td><td>@{items('For_each')?['jobTitle']}</td><td>@{items('For_each')?['city']},@{items('For_each')?['state']},@{items('For_each')?['country']}</td><td style='color:red;font-weight:bold;'>true</td></tr>"
                                                                        },
                                                                        "runAfter": {
                                                                            "Set_variable": [
                                                                                "Succeeded"
                                                                            ]
                                                                        },
                                                                        "type": "AppendToStringVariable"
                                                                    },
                                                                    "Set_variable": {
                                                                        "inputs": {
                                                                            "name": "VIP user",
                                                                            "value": true
                                                                        },
                                                                        "runAfter": {},
                                                                        "type": "SetVariable"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {
                                                                        "Append_to_string_variable_2": {
                                                                            "inputs": {
                                                                                "name": "account info comment",
                                                                                "value": "<tr><td>@{items('For_each')?['userPrincipalName']}</td><td>@{items('For_each')?['jobTitle']}</td><td>@{items('For_each')?['city']},@{items('For_each')?['state']},@{items('For_each')?['country']}</td><td>false</td></tr>"
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "AppendToStringVariable"
                                                                        }
                                                                    }
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "greater": [
                                                                                "@length(body('Run_query_-_check_VIPs')?['value'])",
                                                                                0
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "runAfter": {
                                                                    "Run_query_-_check_VIPs": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            },
                                                            "Run_query_-_check_VIPs": {
                                                                "inputs": {
                                                                    "body": "let vips = _GetWatchlist('vip_users');\nvips\n| where SearchKey contains \"@{items('For_each')?['userPrincipalName']}\"",
                                                                    "host": {
                                                                        "connection": {
                                                                            "name": "@parameters('$connections')['azuremonitorlogs']['connectionId']"
                                                                        }
                                                                    },
                                                                    "method": "post",
                                                                    "path": "/queryData",
                                                                    "queries": {
                                                                        "resourcegroups": "[parameters('workspace_resource_group')]",
                                                                        "resourcename": "LogAnalyticsAndSentinel",
                                                                        "resourcetype": "Log Analytics Workspace",
                                                                        "subscriptions": "[subscription().subscriptionId]",
                                                                        "timerange": "Last 24 hours"
                                                                    }
                                                                },
                                                                "runAfter": {
                                                                    "Append_to_array_variable": [
                                                                        "Succeeded"
                                                                    ]
                                                                },
                                                                "type": "ApiConnection"
                                                            }
                                                        },
                                                        "foreach": "@body('Parse_JSON')?['value']",
                                                        "runAfter": {},
                                                        "type": "Foreach"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@length(body('Parse_JSON')?['value'])",
                                                            0
                                                        ]
                                                    }
                                                ]
                                            },
                                            "runAfter": {
                                                "Parse_JSON": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "HTTP_-_check_if_user_exists": {
                                            "inputs": {
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "authority": "https://login.microsoft.com",
                                                    "clientId": "",
                                                    "secret": "",
                                                    "tenant": "",
                                                    "type": "ActiveDirectoryOAuth"
                                                },
                                                "headers": {
                                                    "Content-type": "application/json"
                                                },
                                                "method": "GET",
                                                "uri": "https://graph.microsoft.com/v1.0/users?$filter=startswith(displayName,'@{substring(items('For_each_account_entity'),1,sub(length(items('For_each_account_entity')),1))}')&$select=id,country,state,city,userPrincipalName,usageLocation,jobTitle"
                                            },
                                            "runAfter": {},
                                            "runtimeConfiguration": {
                                                "secureData": {
                                                    "properties": [
                                                        "inputs"
                                                    ]
                                                }
                                            },
                                            "type": "Http"
                                        },
                                        "Parse_JSON": {
                                            "inputs": {
                                                "content": "@body('HTTP_-_check_if_user_exists')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "value": {
                                                            "items": {
                                                                "properties": {
                                                                    "businessPhones": {
                                                                        "type": [
                                                                            "array",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "displayName": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "givenName": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "id": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "jobTitle": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "mail": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "mobilePhone": {},
                                                                    "officeLocation": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "preferredLanguage": {},
                                                                    "surname": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    },
                                                                    "userPrincipalName": {
                                                                        "type": [
                                                                            "string",
                                                                            "null"
                                                                        ]
                                                                    }
                                                                },
                                                                "required": [],
                                                                "type": "object"
                                                            },
                                                            "type": "array"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "runAfter": {
                                                "HTTP_-_check_if_user_exists": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "ParseJson"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Condition_4": {
                                                "actions": {
                                                    "Append_to_string_variable_6": {
                                                        "inputs": {
                                                            "name": "account info comment",
                                                            "value": "<tr><td>@{substring(items('For_each_account_entity'),1,sub(length(items('For_each_account_entity')),1))} is not a valid Entra ID user.</td><td></td><td></td><td></td></tr>"
                                                        },
                                                        "runAfter": {},
                                                        "type": "AppendToStringVariable"
                                                    }
                                                },
                                                "else": {
                                                    "actions": {
                                                        "For_each_2": {
                                                            "actions": {
                                                                "Append_to_array_variable_2": {
                                                                    "inputs": {
                                                                        "name": "account guids",
                                                                        "value": "@items('For_each_2')?['id']"
                                                                    },
                                                                    "runAfter": {},
                                                                    "type": "AppendToArrayVariable"
                                                                },
                                                                "Condition_2": {
                                                                    "actions": {
                                                                        "Append_to_string_variable_4": {
                                                                            "inputs": {
                                                                                "name": "account info comment",
                                                                                "value": "<tr><td>@{items('For_each_2')?['userPrincipalName']}</td><td>@{items('For_each_2')?['jobTitle']}</td><td>@{items('For_each_2')?['city']},@{items('For_each_2')?['state']},@{items('For_each_2')?['country']}</td><td style='color:red;font-weight:bold;'>true</td></tr>"
                                                                            },
                                                                            "runAfter": {
                                                                                "Set_variable_2": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "AppendToStringVariable"
                                                                        },
                                                                        "Set_variable_2": {
                                                                            "inputs": {
                                                                                "name": "VIP user",
                                                                                "value": true
                                                                            },
                                                                            "runAfter": {},
                                                                            "type": "SetVariable"
                                                                        }
                                                                    },
                                                                    "else": {
                                                                        "actions": {
                                                                            "Append_to_string_variable_3": {
                                                                                "inputs": {
                                                                                    "name": "account info comment",
                                                                                    "value": "<tr><td>@{items('For_each_2')?['userPrincipalName']}</td><td>@{items('For_each_2')?['jobTitle']}</td><td>@{items('For_each_2')?['city']},@{items('For_each_2')?['state']},@{items('For_each_2')?['country']}</td><td>false</td></tr>"
                                                                                },
                                                                                "runAfter": {},
                                                                                "type": "AppendToStringVariable"
                                                                            }
                                                                        }
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "greater": [
                                                                                    "@length(body('Run_query_-_check_VIPs_2')?['value'])",
                                                                                    0
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "runAfter": {
                                                                        "Run_query_-_check_VIPs_2": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                },
                                                                "Run_query_-_check_VIPs_2": {
                                                                    "inputs": {
                                                                        "body": "let vips = _GetWatchlist('vip_users');\nvips\n| where SearchKey contains \"@{items('For_each_2')?['userPrincipalName']}\"",
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuremonitorlogs_1']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "post",
                                                                        "path": "/queryData",
                                                                        "queries": {
                                                                            "resourcegroups": "[parameters('workspace_resource_group')]",
                                                                            "resourcename": "LogAnalyticsAndSentinel",
                                                                            "resourcetype": "Log Analytics Workspace",
                                                                            "subscriptions": "[subscription().subscriptionId]",
                                                                            "timerange": "Last 24 hours"
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Append_to_array_variable_2": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "ApiConnection"
                                                                }
                                                            },
                                                            "foreach": "@body('Parse_JSON_2')?['value']",
                                                            "runAfter": {},
                                                            "type": "Foreach"
                                                        }
                                                    }
                                                },
                                                "expression": {
                                                    "and": [
                                                        {
                                                            "equals": [
                                                                "@length(body('Parse_JSON_2')?['value'])",
                                                                0
                                                            ]
                                                        }
                                                    ]
                                                },
                                                "runAfter": {
                                                    "Parse_JSON_2": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "If"
                                            },
                                            "HTTP_-_get_user_info": {
                                                "inputs": {
                                                    "authentication": {
                                                        "audience": "https://graph.microsoft.com",
                                                        "authority": "https://login.microsoft.com",
                                                        "clientId": "",
                                                        "secret": "",
                                                        "tenant": "",
                                                        "type": "ActiveDirectoryOAuth"
                                                    },
                                                    "headers": {
                                                        "Content-type": "application/json"
                                                    },
                                                    "method": "GET",
                                                    "uri": "https://graph.microsoft.com/v1.0/users?$filter=startswith(displayName,'@{items('For_each_account_entity')}') or startswith(userPrincipalName, '@{items('For_each_account_entity')}')&$select=id,country,state,city,userPrincipalName,usageLocation,jobTitle"
                                                },
                                                "runAfter": {},
                                                "runtimeConfiguration": {
                                                    "secureData": {
                                                        "properties": [
                                                            "inputs"
                                                        ]
                                                    }
                                                },
                                                "type": "Http"
                                            },
                                            "Parse_JSON_2": {
                                                "inputs": {
                                                    "content": "@body('HTTP_-_get_user_info')",
                                                    "schema": {
                                                        "properties": {
                                                            "@@odata.context": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "items": {
                                                                    "properties": {
                                                                        "businessPhones": {
                                                                            "type": [
                                                                                "array",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "displayName": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "givenName": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "id": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "jobTitle": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "mail": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "mobilePhone": {},
                                                                        "officeLocation": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "preferredLanguage": {},
                                                                        "surname": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        },
                                                                        "userPrincipalName": {
                                                                            "type": [
                                                                                "string",
                                                                                "null"
                                                                            ]
                                                                        }
                                                                    },
                                                                    "required": [],
                                                                    "type": "object"
                                                                },
                                                                "type": "array"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "runAfter": {
                                                    "HTTP_-_get_user_info": [
                                                        "Succeeded"
                                                    ]
                                                },
                                                "type": "ParseJson"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@items('For_each_account_entity')",
                                                        "@"
                                                    ]
                                                }
                                            },
                                            {
                                                "not": {
                                                    "contains": [
                                                        "@items('For_each_account_entity')",
                                                        "."
                                                    ]
                                                }
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@triggerBody()?['accounts']",
                            "runAfter": {
                                "Initialize_variable_-_is_VIP": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Initialize_variable_-_account_guids": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "account guids",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_account_info_comment": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_account_info_comment": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "account info comment",
                                        "type": "string",
                                        "value": "<table><tr><th>User</th><th>Title</th><th>Location</th><th>Is VIP</th></tr>"
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_is_VIP": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "VIP user",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_account_guids": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "accounts": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        },
                                        "incidentArmId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuremonitorlogs": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuremonitor-id'))]",
                                "connectionName": "azuremonitorlogs",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuremonitorlogs')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-RiskScoring",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Add_comment_to_incident_(V3)_2": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@triggerBody()?['incidentArmId']",
                                            "message": "<p><span style=\"font-size: 16px\"><strong>Risk Scoring</strong></span><br>\n<span style=\"font-size: 16px\">Initial score for incident: </span><span style=\"font-size: 16px\">@{variables('final score')}</span><span style=\"font-size: 16px\"><br>\nScore has reached threshold for escalation. Notifying incident response team.</span></p>"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/Incidents/Comment"
                                    },
                                    "runAfter": {},
                                    "type": "ApiConnection"
                                },
                                "Response": {
                                    "inputs": {
                                        "body": {
                                            "responseRequired": true
                                        },
                                        "statusCode": 200
                                    },
                                    "kind": "Http",
                                    "runAfter": {
                                        "Update_incident_-_raise_severity": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Response"
                                },
                                "Update_incident_-_raise_severity": {
                                    "inputs": {
                                        "body": {
                                            "incidentArmId": "@body('Get_incident')?['id']",
                                            "severity": "High"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                            }
                                        },
                                        "method": "put",
                                        "path": "/Incidents"
                                    },
                                    "runAfter": {
                                        "Add_comment_to_incident_(V3)_2": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection"
                                }
                            },
                            "else": {
                                "actions": {
                                    "Add_comment_to_incident_(V3)": {
                                        "inputs": {
                                            "body": {
                                                "incidentArmId": "@triggerBody()?['incidentArmId']",
                                                "message": "<p><span style=\"font-size: 16px\"><strong>Risk Scoring<br>\n</strong></span><span style=\"font-size: 16px\">Initial score for incident:</span><span style=\"font-size: 16px\"><strong> </strong></span><span style=\"font-size: 16px\"><strong>@{variables('final score')}</strong></span><span style=\"font-size: 16px\"><strong><br>\n</strong></span><span style=\"font-size: 16px\">Score does not meet threshold for escalation.</span></p>"
                                            },
                                            "host": {
                                                "connection": {
                                                    "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                }
                                            },
                                            "method": "post",
                                            "path": "/Incidents/Comment"
                                        },
                                        "runAfter": {},
                                        "type": "ApiConnection"
                                    },
                                    "Condition_2": {
                                        "actions": {
                                            "Update_incident": {
                                                "inputs": {
                                                    "body": {
                                                        "classification": {
                                                            "ClassificationAndReason": "FalsePositive - IncorrectAlertLogic",
                                                            "ClassificationReasonText": "FP | Reason: Automation determined that duo event does not require further investigation."
                                                        },
                                                        "incidentArmId": "@triggerBody()?['incidentArmId']",
                                                        "status": "Closed"
                                                    },
                                                    "host": {
                                                        "connection": {
                                                            "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                                        }
                                                    },
                                                    "method": "put",
                                                    "path": "/Incidents"
                                                },
                                                "runAfter": {},
                                                "type": "ApiConnection"
                                            }
                                        },
                                        "expression": {
                                            "or": [
                                                {
                                                    "contains": [
                                                        "@body('Get_incident')?['properties']?['title']",
                                                        "DY-UC-0011"
                                                    ]
                                                },
                                                {
                                                    "contains": [
                                                        "@body('Get_incident')?['properties']?['title']",
                                                        "Duo NRT"
                                                    ]
                                                }
                                            ]
                                        },
                                        "runAfter": {
                                            "Response_2": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "If"
                                    },
                                    "Response_2": {
                                        "inputs": {
                                            "body": {
                                                "responseRequired": false
                                            },
                                            "statusCode": 200
                                        },
                                        "kind": "Http",
                                        "runAfter": {
                                            "Add_comment_to_incident_(V3)": [
                                                "Succeeded"
                                            ]
                                        },
                                        "type": "Response"
                                    }
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greaterOrEquals": [
                                            "@variables('final score')",
                                            25
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "final score",
                                        "type": "integer",
                                        "value": "@triggerBody()?['riskScore']"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "riskScore": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-BlockIPAddress",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                 "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']",
                                    "message": "<p>IP Addresses added to conditional access block list: @{triggerBody()?['ipAddresses']}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Append_to_string_variable": {
                            "inputs": {
                                "name": "body",
                                "value": "],\n\"isTrusted\": false\n}"
                            },
                            "runAfter": {
                                "For_each_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Append_to_string_variable_3": {
                            "inputs": {
                                "name": "email_body_iplist",
                                "value": "</ul>"
                            },
                            "runAfter": {
                                "For_each_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Compose": {
                            "inputs": "@variables('body')",
                            "runAfter": {
                                "Append_to_string_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Condition_-_named_location_reaching_limit": {
                            "actions": {
                                "Terminate": {
                                    "inputs": {
                                        "runError": {
                                            "message": "Named location has max number of IPs!"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {},
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greaterOrEquals": [
                                            "@length(body('Parse_JSON')?['ipRanges'])",
                                            1500
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_4": {
                            "actions": {
                                "Terminate_3": {
                                    "inputs": {
                                        "runError": {
                                            "message": "No more room in named location lists!"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {},
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('available_list')",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "For_each": {
                            "actions": {
                                "Condition_2": {
                                    "actions": {
                                        "Condition_-_if_any_lists_available": {
                                            "actions": {
                                                "Set_variable": {
                                                    "inputs": {
                                                        "name": "ip_list_guid",
                                                        "value": "@items('For_each')?['id']"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                },
                                                "Set_variable_2": {
                                                    "inputs": {
                                                        "name": "available_list",
                                                        "value": true
                                                    },
                                                    "runAfter": {
                                                        "Set_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "lessOrEquals": [
                                                            "@length(items('For_each')?['ipRanges'])",
                                                            500
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@items('For_each')?['displayName']",
                                                            "Blocked"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "contains": [
                                                                "@items('For_each')?['displayName']",
                                                                "TEST"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each')?['@odata.type']",
                                                    "ipNamedLocation"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Parse_JSON_2')?['value']",
                            "runAfter": {
                                "Initialize_variable_open_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "actions": {
                                "Append_existing_IPs": {
                                    "inputs": {
                                        "name": "body",
                                        "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_2')?['cidrAddress']}\"\n    },"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                }
                            },
                            "foreach": "@body('Parse_JSON')?['ipRanges']",
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_new_IPs": {
                                            "inputs": {
                                                "name": "body",
                                                "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_3')}\"\n    },"
                                            },
                                            "runAfter": {},
                                            "type": "AppendToStringVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_string_variable_4": {
                                                "inputs": {
                                                    "name": "body",
                                                    "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_3')}/32\"\n    },"
                                                },
                                                "runAfter": {},
                                                "type": "AppendToStringVariable"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each_3')",
                                                    "/"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@triggerBody()?['ipAddresses']",
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_4": {
                            "actions": {
                                "Append_to_string_variable_2": {
                                    "inputs": {
                                        "name": "email_body_iplist",
                                        "value": "<li>@{items('For_each_4')}</li>"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                }
                            },
                            "foreach": "@triggerBody()?['ipAddresses']",
                            "runAfter": {
                                "Initialize_variable_-_email_ip_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "GET_existing_list": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/@{variables('ip_list_guid')}"
                            },
                            "runAfter": {
                                "Condition_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {
                                "Append_to_string_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "test"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('spsecret')}/value"
                            },
                            "runAfter": {
                                "Initialize_variable_-_email_recipients": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "HTTP_GET_all_blocked_ip_lists": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations"
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "body",
                                        "type": "string",
                                        "value": "{\n  \"@odata.type\": \"#microsoft.graph.ipNamedLocation\",\n  \"ipRanges\": ["
                                    }
                                ]
                            },
                            "runAfter": {
                                "Condition_-_named_location_reaching_limit": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_email_ip_list": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_body_iplist",
                                        "type": "string",
                                        "value": "<ul>"
                                    }
                                ]
                            },
                            "runAfter": {
                                "PATCH_existing_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_email_recipients": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_recipients",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_ip_list_guid": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ip_list_guid",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_open_list": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "available_list",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_ip_list_guid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "PATCH_existing_list": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "@outputs('Compose')",
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "method": "PATCH",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/@{variables('ip_list_guid')}"
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "staticResult": {
                                    "name": "PATCH_existing_list0",
                                    "staticResultOptions": "Disabled"
                                }
                            },
                            "type": "Http"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@body('GET_existing_list')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "ipRanges": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "cidrAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "cidrAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "isTrusted": {
                                            "type": "boolean"
                                        },
                                        "modifiedDateTime": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "GET_existing_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Parse_JSON_2": {
                            "inputs": {
                                "content": "@body('HTTP_GET_all_blocked_ip_lists')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "countriesAndRegions": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "countryLookupMethod": {
                                                        "type": "string"
                                                    },
                                                    "createdDateTime": {},
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "includeUnknownCountriesAndRegions": {
                                                        "type": "boolean"
                                                    },
                                                    "ipRanges": {
                                                        "items": {
                                                            "properties": {
                                                                "@@odata.type": {
                                                                    "type": "string"
                                                                },
                                                                "cidrAddress": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "@@odata.type",
                                                                "cidrAddress"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "isTrusted": {
                                                        "type": "boolean"
                                                    },
                                                    "modifiedDateTime": {}
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "id",
                                                    "displayName",
                                                    "modifiedDateTime",
                                                    "createdDateTime"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_GET_all_blocked_ip_lists": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "staticResults": {
                        "PATCH_existing_list0": {
                            "outputs": {
                                "headers": {},
                                "statusCode": "OK"
                            },
                            "status": "Succeeded"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "ipAddresses": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-RevokeUserSessions",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']",
                                    "message": "<p>User singin sessions for @{body('Parse_JSON')?['value'][0]['userPrincipalName']} were revoked in Entra ID.</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Send_an_email_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {
                                "HTTP_-_revoke_sessions": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "HTTP_-_lookup_user": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/users?$filter=startswith(userPrincipalName,'@{triggerBody()?['userName']}')&$select=id,country,state,city,userPrincipalName,usageLocation,jobTitle"
                            },
                            "runAfter": {},
                            "type": "Http"
                        },
                        "HTTP_-_revoke_sessions": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "POST",
                                "uri": "https://graph.microsoft.com/v1.0/users/@{variables('user GUID')}/revokeSignInSessions"
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "user GUID",
                                        "type": "string",
                                        "value": "@{body('Parse_JSON')?['value'][0]['id']}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_2": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email recipients",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@body('HTTP_-_lookup_user')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "businessPhones": {
                                                        "type": [
                                                            "array",
                                                            "null"
                                                        ]
                                                    },
                                                    "displayName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "givenName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "id": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "jobTitle": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "mail": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "mobilePhone": {},
                                                    "officeLocation": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "preferredLanguage": {},
                                                    "surname": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    },
                                                    "userPrincipalName": {
                                                        "type": [
                                                            "string",
                                                            "null"
                                                        ]
                                                    }
                                                },
                                                "required": [],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_-_lookup_user": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Send_an_email_(V2)": {
                            "inputs": {
                                "body": {
                                    "Body": "<p>User @{body('Parse_JSON')?['value'][0]['userPrincipalName']} was involved in a security incident.&nbsp;As part of remediation, their signin sessions have been revoked. The user will need to reauthenticate to all applications.</p>",
                                    "Subject": "User sessions revoked",
                                    "To": "@variables('email recipients')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            },
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-office365-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-Remediation",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@body('Get_incident')?['id']",
                                    "message": "<p>&nbsp;@{variables('response_user')} selected the following response: @{variables('response_action')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Send_an_email_(V2)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Compose": {
                            "inputs": "<h2>Incident details</h2><table style=\"font-size: 1.2em; text-align: left; border-collapse: collapse;  margin: 25px 0; box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\"><tr style=\"background-color: #00a2ed; color: #ffffff;\"><th style=\"padding: 5px\">Incident ID</th><th style=\"padding: 5px\">Title</th><th style=\"padding: 5px\">Link</th></tr><tr style=\"border: 1px solid #dddddd;\"><td style=\"padding: 5px\">@{body('Get_incident')?['properties']?['incidentNumber']}</td><td style=\"padding: 5px\">@{body('Get_incident')?['properties']?['title']}</td><td style=\"padding: 5px\"><a href=\"@{body('Get_incident')?['properties']?['incidentUrl']}\">Link</a></td></tr></table><br/><strong>This notification automatically generated by Azure Logic App: Module-Remediation.</strong>",
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Compose_adaptive_card": {
                            "inputs": {
                                "$schema": "http://adaptivecards.io/schemas/adaptive-card.json",
                                "body": [
                                    {
                                        "size": "Large",
                                        "text": "🚨 Incident Requires Response",
                                        "type": "TextBlock",
                                        "weight": "Bolder",
                                        "wrap": true
                                    },
                                    {
                                        "size": "Medium",
                                        "text": "A Microsoft Sentinel incident has breached the risk threshold and requires a response. Select an action from the menu below.",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "separator": true,
                                        "size": "Medium",
                                        "text": "**Incident details**\n\nIncident ID: @{body('Get_incident')?['properties']?['incidentNumber']}\n\nIncident Title: @{body('Get_incident')?['properties']?['title']}\n\nIncident Link: [Link](@{body('Get_incident')?['properties']?['incidentUrl']})\n\n**Affected User:** @{variables('targetAccount')} **Affected IP Address:** @{variables('target ip address')}",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "separator": true,
                                        "size": "Small",
                                        "text": "**Response Actions**",
                                        "type": "TextBlock",
                                        "wrap": true
                                    },
                                    {
                                        "columns": [
                                            {
                                                "items": [
                                                    {
                                                        "actions": [
                                                            {
                                                                "style": "destructive",
                                                                "targetElements": [
                                                                    {
                                                                        "elementId": "responseMenu1",
                                                                        "isVisible": true
                                                                    }
                                                                ],
                                                                "title": "Lock Account",
                                                                "type": "Action.ToggleVisibility",
                                                                "wrap": true
                                                            },
                                                            {
                                                                "style": "destructive",
                                                                "targetElements": [
                                                                    {
                                                                        "elementId": "responseMenu2",
                                                                        "isVisible": true
                                                                    }
                                                                ],
                                                                "title": "Block IP Address",
                                                                "type": "Action.ToggleVisibility"
                                                            }
                                                        ],
                                                        "type": "ActionSet"
                                                    }
                                                ],
                                                "type": "Column",
                                                "width": "stretch"
                                            }
                                        ],
                                        "type": "ColumnSet"
                                    },
                                    {
                                        "columns": [
                                            {
                                                "items": [
                                                    {
                                                        "actions": [
                                                            {
                                                                "id": "ActionBoth",
                                                                "style": "destructive",
                                                                "targetElements": [
                                                                    {
                                                                        "elementId": "responseMenu3",
                                                                        "isVisible": true
                                                                    }
                                                                ],
                                                                "title": "Both",
                                                                "type": "Action.ToggleVisibility"
                                                            },
                                                            {
                                                                "data": {
                                                                    "response": "DoNothing"
                                                                },
                                                                "id": "Action.DoNothing",
                                                                "title": "Do Nothing",
                                                                "type": "Action.Submit"
                                                            }
                                                        ],
                                                        "type": "ActionSet"
                                                    }
                                                ],
                                                "type": "Column",
                                                "width": "stretch"
                                            }
                                        ],
                                        "type": "ColumnSet"
                                    },
                                    {
                                        "id": "responseMenu1",
                                        "isVisible": false,
                                        "items": [
                                            {
                                                "id": "actionWarning1",
                                                "size": "Medium",
                                                "text": "⚠️ **WARNING:** Clicking submit will initate a response action.",
                                                "type": "TextBlock",
                                                "wrap": true
                                            },
                                            {
                                                "columns": [
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "data": {
                                                                            "response": "lockAccount"
                                                                        },
                                                                        "title": "Submit",
                                                                        "type": "Action.Submit"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    },
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "targetElements": [
                                                                            {
                                                                                "elementId": "responseMenu1",
                                                                                "isVisible": false
                                                                            }
                                                                        ],
                                                                        "title": "Cancel",
                                                                        "type": "Action.ToggleVisibility"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    }
                                                ],
                                                "type": "ColumnSet"
                                            }
                                        ],
                                        "style": "emphasis",
                                        "type": "Container"
                                    },
                                    {
                                        "id": "responseMenu2",
                                        "isVisible": false,
                                        "items": [
                                            {
                                                "id": "actionWarning2",
                                                "size": "Medium",
                                                "text": "⚠️ **WARNING:** Clicking submit will initate a response action.",
                                                "type": "TextBlock",
                                                "wrap": true
                                            },
                                            {
                                                "columns": [
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "data": {
                                                                            "response": "blockIp"
                                                                        },
                                                                        "title": "Submit",
                                                                        "type": "Action.Submit"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    },
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "targetElements": [
                                                                            {
                                                                                "elementId": "responseMenu2",
                                                                                "isVisible": false
                                                                            }
                                                                        ],
                                                                        "title": "Cancel",
                                                                        "type": "Action.ToggleVisibility"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    }
                                                ],
                                                "type": "ColumnSet"
                                            }
                                        ],
                                        "style": "emphasis",
                                        "type": "Container"
                                    },
                                    {
                                        "id": "responseMenu3",
                                        "isVisible": false,
                                        "items": [
                                            {
                                                "id": "actionWarning3",
                                                "size": "Medium",
                                                "text": "⚠️ **WARNING:** Clicking submit will initate a response action.",
                                                "type": "TextBlock",
                                                "wrap": true
                                            },
                                            {
                                                "columns": [
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "data": {
                                                                            "response": "both"
                                                                        },
                                                                        "title": "Submit",
                                                                        "type": "Action.Submit"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    },
                                                    {
                                                        "items": [
                                                            {
                                                                "actions": [
                                                                    {
                                                                        "targetElements": [
                                                                            {
                                                                                "elementId": "responseMenu3",
                                                                                "isVisible": false
                                                                            }
                                                                        ],
                                                                        "title": "Cancel",
                                                                        "type": "Action.ToggleVisibility"
                                                                    }
                                                                ],
                                                                "horizontalAlignment": "Center",
                                                                "type": "ActionSet"
                                                            }
                                                        ],
                                                        "type": "Column",
                                                        "width": "stretch"
                                                    }
                                                ],
                                                "type": "ColumnSet"
                                            }
                                        ],
                                        "style": "emphasis",
                                        "type": "Container"
                                    }
                                ],
                                "type": "AdaptiveCard",
                                "version": "1.3"
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "For_each": {
                            "actions": {
                                "Condition_-_if_account": {
                                    "actions": {
                                        "Set_variable": {
                                            "inputs": {
                                                "name": "targetAccount",
                                                "value": "@{items('For_each')?['properties']['accountName']}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each')?['kind']",
                                                    "Account"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                },
                                "Condition_-_if_ip_address": {
                                    "actions": {
                                        "Set_variable_2": {
                                            "inputs": {
                                                "name": "target ip address",
                                                "value": "@{items('For_each')?['properties']['address']}"
                                            },
                                            "runAfter": {},
                                            "type": "SetVariable"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@items('For_each')?['kind']",
                                                    "Ip"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {
                                        "Condition_-_if_account": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "If"
                                }
                            },
                            "foreach": "@triggerBody()?['entitiesList']",
                            "runAfter": {
                                "Initialize_variable_-_target_ip_address": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email recipients",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_response_action": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "response_action",
                                        "type": "string",
                                        "value": "@{body('Post_adaptive_card_and_wait_for_a_response')?['data']['response']}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Post_adaptive_card_and_wait_for_a_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_response_user": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "response_user",
                                        "type": "string",
                                        "value": "@{body('Post_adaptive_card_and_wait_for_a_response')?['responder']['email']}"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_response_action": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_target_ip_address": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "target ip address",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_-_target_user_account": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_target_user_account": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "targetAccount",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Post_adaptive_card_and_wait_for_a_response": {
                            "inputs": {
                                "body": {
                                    "body": {
                                        "messageBody": "@{outputs('Compose_adaptive_card')}",
                                        "recipient": {
                                            "channelId": "",
                                            "groupId": ""
                                        },
                                        "updateMessage": "Thanks for your response!"
                                    },
                                    "notificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                            },
                            "runAfter": {
                                "Compose_adaptive_card": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnectionWebhook"
                        },
                        "Post_message_in_a_chat_or_channel": {
                            "inputs": {
                                "body": {
                                    "messageBody": "<p>@{variables('response_user')} has responded to incident @{body('Get_incident')?['properties']?['incidentNumber']} with the action: @{variables('response_action')}&nbsp;</p>",
                                    "recipient": {
                                        "channelId": "",
                                        "groupId": ""
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('Flow bot')}/location/@{encodeURIComponent('Channel')}"
                            },
                            "runAfter": {
                                "Initialize_variable_-_response_user": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Send_an_email_(V2)": {
                            "inputs": {
                                "body": {
                                    "Body": "<p>@{variables('response_user')} has responded to incident @{body('Get_incident')?['properties']?['incidentNumber']} with the action: @{variables('response_action')}</p>",
                                    "Importance": "High",
                                    "Subject": "UPDATE: Sentinel Incident [@{body('Get_incident')?['properties']?['incidentNumber']}] - Remediation Required",
                                    "To": "@variables('email recipients')"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['office365']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/v2/Mail"
                            },
                            "runAfter": {
                                "Post_message_in_a_chat_or_channel": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Switch": {
                            "cases": {
                                "Case": {
                                    "actions": {},
                                    "case": "DoNothing"
                                },
                                "Case_2": {
                                    "actions": {
                                        "HTTP_-_Module-RevokeAADSessions": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "userName": "@{variables('targetAccount')}"
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {
                                                "HTTP_-_call_Module-BlockIPAddress_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "HTTP_-_call_Module-BlockIPAddress_2": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "ipAddresses": [
                                                        "@{variables('target ip address')}"
                                                    ]
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {
                                                "HTTP_-_call_Module-DisableOnPremUser_2": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "HTTP_-_call_Module-DisableOnPremUser_2": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "userName": "@{variables('targetAccount')}"
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        }
                                    },
                                    "case": "both"
                                },
                                "Case_3": {
                                    "actions": {
                                        "HTTP_-_Call_Module-RevokeAADSessions": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "userName": "@{variables('targetAccount')}"
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {
                                                "HTTP_-_call_Module-DisableOnPremUser": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http"
                                        },
                                        "HTTP_-_call_Module-DisableOnPremUser": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "userName": "@{variables('targetAccount')}"
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        }
                                    },
                                    "case": "lockAccount"
                                },
                                "Case_4": {
                                    "actions": {
                                        "HTTP_-_Call_Module-BlockIPAddress": {
                                            "inputs": {
                                                "body": {
                                                    "incidentArmId": "@{triggerBody()?['incidentArmId']}",
                                                    "ipAddresses": [
                                                        "@{variables('target ip address')}"
                                                    ]
                                                },
                                                "method": "POST",
                                                "uri": ""
                                            },
                                            "runAfter": {},
                                            "type": "Http"
                                        }
                                    },
                                    "case": "blockIp"
                                }
                            },
                            "default": {
                                "actions": {}
                            },
                            "expression": "@body('Post_adaptive_card_and_wait_for_a_response')?['data']['response']",
                            "runAfter": {
                                "Add_comment_to_incident_(V3)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Switch"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "entitiesList": {
                                            "items": {
                                                "properties": {
                                                    "test": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "test"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "incidentArmId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-office365-id'))]",
                                "connectionName": "office365",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/office365')]"
                            },
                            "teams": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-teams-id'))]",
                                "connectionName": "teams",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/teams')]"
                            }
                        }
                    }
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-DisableOnPremUser",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']",
                                    "message": "<p>Job to disable on-prem user account result: @{body('Create_job')?['properties']?['status']}. <br>\nJob ID: @{body('Create_job')?['properties']?['jobId']}<br>\nJob output: @{body('Get_job_output')}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Get_job_output": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Create_job": {
                            "inputs": {
                                "body": {
                                    "properties": {
                                        "parameters": {
                                            "User": "@{triggerBody()?['userName']}"
                                        },
                                        "runOn": ""
                                    }
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                    }
                                },
                                "method": "put",
                                "path": "",
                                "queries": {
                                    "runbookName": "rb-DisableUser",
                                    "wait": true,
                                    "x-ms-api-version": "2015-10-31"
                                }
                            },
                            "runAfter": {},
                            "type": "ApiConnection"
                        },
                        "Get_job_output": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureautomation']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "",
                                "queries": {
                                    "x-ms-api-version": "2015-10-31"
                                }
                            },
                            "runAfter": {
                                "Create_job": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "userName": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureautomation": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azureautomation-id'))]",
                                "connectionName": "azureautomation",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azureautomation')]"
                            },
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}