{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workspace_location": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location of the Log Analytics Workspace"
            }
        }
    },
    "variables": {
        "api-azuresentinel-id": "azuresentinel-automated-response"
    },
    "resources": [
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2018-07-01-preview",
            "name": "[variables('api-azuresentinel-id')]",
            "location": "[parameters('workspace_location')]",
            "properties": {
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', parameters('workspace_location'), '/managedApis/azuresentinel')]"
                }
            }
        },
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "Module-BlockIPAddress",
            "location": "[parameters('workspace_location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                 "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "actions": {
                        "Add_comment_to_incident_(V3)": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']",
                                    "message": "<p>IP Addresses added to conditional access block list: @{triggerBody()?['ipAddresses']}</p>"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents/Comment"
                            },
                            "runAfter": {
                                "Get_incident": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Append_to_string_variable": {
                            "inputs": {
                                "name": "body",
                                "value": "],\n\"isTrusted\": false\n}"
                            },
                            "runAfter": {
                                "For_each_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Append_to_string_variable_3": {
                            "inputs": {
                                "name": "email_body_iplist",
                                "value": "</ul>"
                            },
                            "runAfter": {
                                "For_each_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable"
                        },
                        "Compose": {
                            "inputs": "@variables('body')",
                            "runAfter": {
                                "Append_to_string_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Compose"
                        },
                        "Condition_-_named_location_reaching_limit": {
                            "actions": {
                                "Terminate": {
                                    "inputs": {
                                        "runError": {
                                            "message": "Named location has max number of IPs!"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {},
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "greaterOrEquals": [
                                            "@length(body('Parse_JSON')?['ipRanges'])",
                                            1500
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "Condition_4": {
                            "actions": {
                                "Terminate_3": {
                                    "inputs": {
                                        "runError": {
                                            "message": "No more room in named location lists!"
                                        },
                                        "runStatus": "Failed"
                                    },
                                    "runAfter": {},
                                    "type": "Terminate"
                                }
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@variables('available_list')",
                                            false
                                        ]
                                    }
                                ]
                            },
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            },
                            "type": "If"
                        },
                        "For_each": {
                            "actions": {
                                "Condition_2": {
                                    "actions": {
                                        "Condition_-_if_any_lists_available": {
                                            "actions": {
                                                "Set_variable": {
                                                    "inputs": {
                                                        "name": "ip_list_guid",
                                                        "value": "@items('For_each')?['id']"
                                                    },
                                                    "runAfter": {},
                                                    "type": "SetVariable"
                                                },
                                                "Set_variable_2": {
                                                    "inputs": {
                                                        "name": "available_list",
                                                        "value": true
                                                    },
                                                    "runAfter": {
                                                        "Set_variable": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable"
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "lessOrEquals": [
                                                            "@length(items('For_each')?['ipRanges'])",
                                                            500
                                                        ]
                                                    },
                                                    {
                                                        "contains": [
                                                            "@items('For_each')?['displayName']",
                                                            "Blocked"
                                                        ]
                                                    },
                                                    {
                                                        "not": {
                                                            "contains": [
                                                                "@items('For_each')?['displayName']",
                                                                "TEST"
                                                            ]
                                                        }
                                                    }
                                                ]
                                            },
                                            "runAfter": {},
                                            "type": "If"
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each')?['@odata.type']",
                                                    "ipNamedLocation"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@body('Parse_JSON_2')?['value']",
                            "runAfter": {
                                "Initialize_variable_open_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_2": {
                            "actions": {
                                "Append_existing_IPs": {
                                    "inputs": {
                                        "name": "body",
                                        "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_2')?['cidrAddress']}\"\n    },"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                }
                            },
                            "foreach": "@body('Parse_JSON')?['ipRanges']",
                            "runAfter": {
                                "Initialize_variable": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_3": {
                            "actions": {
                                "Condition": {
                                    "actions": {
                                        "Append_new_IPs": {
                                            "inputs": {
                                                "name": "body",
                                                "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_3')}\"\n    },"
                                            },
                                            "runAfter": {},
                                            "type": "AppendToStringVariable"
                                        }
                                    },
                                    "else": {
                                        "actions": {
                                            "Append_to_string_variable_4": {
                                                "inputs": {
                                                    "name": "body",
                                                    "value": "    {\n      \"@odata.type\": \"#microsoft.graph.iPv4CidrRange\",\n      \"cidrAddress\": \"@{items('For_each_3')}/32\"\n    },"
                                                },
                                                "runAfter": {},
                                                "type": "AppendToStringVariable"
                                            }
                                        }
                                    },
                                    "expression": {
                                        "and": [
                                            {
                                                "contains": [
                                                    "@items('For_each_3')",
                                                    "/"
                                                ]
                                            }
                                        ]
                                    },
                                    "runAfter": {},
                                    "type": "If"
                                }
                            },
                            "foreach": "@triggerBody()?['ipAddresses']",
                            "runAfter": {
                                "For_each_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "For_each_4": {
                            "actions": {
                                "Append_to_string_variable_2": {
                                    "inputs": {
                                        "name": "email_body_iplist",
                                        "value": "<li>@{items('For_each_4')}</li>"
                                    },
                                    "runAfter": {},
                                    "type": "AppendToStringVariable"
                                }
                            },
                            "foreach": "@triggerBody()?['ipAddresses']",
                            "runAfter": {
                                "Initialize_variable_-_email_ip_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "GET_existing_list": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/@{variables('ip_list_guid')}"
                            },
                            "runAfter": {
                                "Condition_4": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Get_incident": {
                            "inputs": {
                                "body": {
                                    "incidentArmId": "@triggerBody()?['incidentArmId']"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azuresentinel']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/Incidents"
                            },
                            "runAfter": {
                                "Append_to_string_variable_3": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "Get_secret": {
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "test"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('spsecret')}/value"
                            },
                            "runAfter": {
                                "Initialize_variable_-_email_recipients": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection"
                        },
                        "HTTP_GET_all_blocked_ip_lists": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "method": "GET",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations"
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "Initialize_variable": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "body",
                                        "type": "string",
                                        "value": "{\n  \"@odata.type\": \"#microsoft.graph.ipNamedLocation\",\n  \"ipRanges\": ["
                                    }
                                ]
                            },
                            "runAfter": {
                                "Condition_-_named_location_reaching_limit": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_email_ip_list": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_body_iplist",
                                        "type": "string",
                                        "value": "<ul>"
                                    }
                                ]
                            },
                            "runAfter": {
                                "PATCH_existing_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_-_email_recipients": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "email_recipients",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            },
                            "runAfter": {},
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_ip_list_guid": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "ip_list_guid",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "Parse_JSON_2": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "Initialize_variable_open_list": {
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "available_list",
                                        "type": "boolean",
                                        "value": false
                                    }
                                ]
                            },
                            "runAfter": {
                                "Initialize_variable_ip_list_guid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable"
                        },
                        "PATCH_existing_list": {
                            "inputs": {
                                "authentication": {
                                    "audience": "https://graph.microsoft.com",
                                    "authority": "https://login.microsoft.com",
                                    "clientId": "",
                                    "secret": "",
                                    "tenant": "",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "@outputs('Compose')",
                                "headers": {
                                    "Content-type": "application/json"
                                },
                                "method": "PATCH",
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations/@{variables('ip_list_guid')}"
                            },
                            "runAfter": {
                                "Compose": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "staticResult": {
                                    "name": "PATCH_existing_list0",
                                    "staticResultOptions": "Disabled"
                                }
                            },
                            "type": "Http"
                        },
                        "Parse_JSON": {
                            "inputs": {
                                "content": "@body('GET_existing_list')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "@@odata.type": {
                                            "type": "string"
                                        },
                                        "createdDateTime": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        },
                                        "displayName": {
                                            "type": "string"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "ipRanges": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "cidrAddress": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "cidrAddress"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "isTrusted": {
                                            "type": "boolean"
                                        },
                                        "modifiedDateTime": {
                                            "type": [
                                                "string",
                                                "null"
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "GET_existing_list": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        },
                        "Parse_JSON_2": {
                            "inputs": {
                                "content": "@body('HTTP_GET_all_blocked_ip_lists')",
                                "schema": {
                                    "properties": {
                                        "@@odata.context": {
                                            "type": "string"
                                        },
                                        "value": {
                                            "items": {
                                                "properties": {
                                                    "@@odata.type": {
                                                        "type": "string"
                                                    },
                                                    "countriesAndRegions": {
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "countryLookupMethod": {
                                                        "type": "string"
                                                    },
                                                    "createdDateTime": {},
                                                    "displayName": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "includeUnknownCountriesAndRegions": {
                                                        "type": "boolean"
                                                    },
                                                    "ipRanges": {
                                                        "items": {
                                                            "properties": {
                                                                "@@odata.type": {
                                                                    "type": "string"
                                                                },
                                                                "cidrAddress": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "required": [
                                                                "@@odata.type",
                                                                "cidrAddress"
                                                            ],
                                                            "type": "object"
                                                        },
                                                        "type": "array"
                                                    },
                                                    "isTrusted": {
                                                        "type": "boolean"
                                                    },
                                                    "modifiedDateTime": {}
                                                },
                                                "required": [
                                                    "@@odata.type",
                                                    "id",
                                                    "displayName",
                                                    "modifiedDateTime",
                                                    "createdDateTime"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "runAfter": {
                                "HTTP_GET_all_blocked_ip_lists": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson"
                        }
                    },
                    "contentVersion": "1.0.0.0",
                    "outputs": {},
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "staticResults": {
                        "PATCH_existing_list0": {
                            "outputs": {
                                "headers": {},
                                "statusCode": "OK"
                            },
                            "status": "Succeeded"
                        }
                    },
                    "triggers": {
                        "manual": {
                            "inputs": {
                                "schema": {
                                    "properties": {
                                        "incidentArmId": {
                                            "type": "string"
                                        },
                                        "ipAddresses": {
                                            "items": {
                                                "type": "string"
                                            },
                                            "type": "array"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "kind": "Http",
                            "type": "Request"
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuresentinel": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('api-azuresentinel-id'))]",
                                "connectionName": "azuresentinel",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/azuresentinel')]"
                            }
                        }
                    }
                }
            }
        }
    ]
}